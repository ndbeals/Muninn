scalar Date

type Mutation {
  test(id: ID): String
}


type Query {



  Event(id: ID!): Event
  Events(id: ID): [Event]!
}

# import "user.gql"




interface EventCreator {
  id: ID!
}

type Event {
  id: ID!
  Type: EventType!
  Data: EventData!
  Creator: EventCreator!
  createdAt: Date!
  deletedAt: Date
}
type EventData {
  id: ID!
  Events: [Event!]!
  data: String!
  sender: String!
  extraData: String
  createdAt: Date!
  updatedAt: Date!
  deletedAt: Date
}
type EventType {
  id: ID!
  name: String!
  data: String
}

# import "notification.gql"

# import "session.gql"